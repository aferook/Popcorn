<dialogs:CustomDialog
    x:Class="Popcorn.Dialogs.TraktDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:command="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:converters="clr-namespace:Popcorn.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:local="clr-namespace:Popcorn.Dialogs"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:wpf="clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf"
    d:DesignHeight="300"
    d:DesignWidth="300"
    Background="Transparent"
    mc:Ignorable="d">
    <dialogs:CustomDialog.Style>
        <Style BasedOn="{StaticResource {x:Type dialogs:BaseMetroDialog}}" TargetType="{x:Type dialogs:BaseMetroDialog}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type dialogs:BaseMetroDialog}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="DialogShownStoryboard">
                                <DoubleAnimation
                                    AccelerationRatio=".9"
                                    BeginTime="0:0:0"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0:0:0.2" />
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid Background="{TemplateBinding Background}">
                            <Border FocusVisualStyle="{x:Null}" Focusable="False">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ContentPresenter Grid.Row="0" Content="{TemplateBinding DialogTop}" />
                                    <Grid Grid.Row="1">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <TextBlock
                                                Grid.Row="0"
                                                FontSize="{StaticResource DialogTitleFontSize}"
                                                Foreground="{TemplateBinding Foreground}"
                                                Text="{TemplateBinding Title}"
                                                TextWrapping="Wrap" />
                                            <ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}" />
                                        </Grid>
                                    </Grid>
                                    <ContentPresenter Grid.Row="2" Content="{TemplateBinding DialogBottom}" />
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <EventTrigger.Actions>
                                    <BeginStoryboard Storyboard="{StaticResource DialogShownStoryboard}" />
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </dialogs:CustomDialog.Style>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <command:EventToCommand Command="{Binding Mode=OneWay, Path=InitializeAsyncCommand}" PassEventArgsToCommand="False" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"
        Background="Transparent">
        <Rectangle
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Fill="Black"
            Opacity="0.6" />
        <Grid Background="Transparent">
            <Grid.Resources>
                <ResourceDictionary>
                    <converters:BoolToInverseVisibilityConverter x:Key="BoolToInverseVisibilityConverter" />
                    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
                    <converters:BoolToInverseBoolConverter x:Key="BoolToInverseBoolConverter" />
                    <converters:MultiBooleanToVisibilityConverter x:Key="MultiBooleanToVisibilityConverter" />
                </ResourceDictionary>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TextBlock
                Grid.Row="0"
                Margin="0,15,0,0"
                HorizontalAlignment="Center"
                FontSize="28"
                FontWeight="Light"
                Foreground="White"
                Text="{lex:LocText TraktConnectLabel}"
                Typography.Capitals="SmallCaps" />
            <StackPanel
                Grid.Row="1"
                Margin="0,20,0,0"
                Orientation="Vertical"
                Visibility="{Binding IsLoggedIn, Converter={StaticResource BoolToVisibilityConverter}}">
                <wpf:ChromiumWebBrowser
                    x:Name="Browser"
                    Width="350"
                    Height="500"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Address="{Binding TraktOAuthUrl}">
                    <wpf:ChromiumWebBrowser.Visibility>
                        <MultiBinding Converter="{StaticResource MultiBooleanToVisibilityConverter}" ConverterParameter="AND">
                            <Binding Converter="{StaticResource BoolToInverseBoolConverter}" Path="IsLoading" />
                            <Binding
                                Converter="{StaticResource BoolToInverseBoolConverter}"
                                ElementName="Browser"
                                Path="WebBrowser.IsLoading" />
                        </MultiBinding>
                    </wpf:ChromiumWebBrowser.Visibility>
                </wpf:ChromiumWebBrowser>
                <controls:ProgressRing
                    Margin="0,10,0,0"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource AccentColorBrush}"
                    IsActive="True">
                    <controls:ProgressRing.Visibility>
                        <MultiBinding Converter="{StaticResource MultiBooleanToVisibilityConverter}" ConverterParameter="OR">
                            <Binding Path="IsLoading" />
                            <Binding ElementName="Browser" Path="WebBrowser.IsLoading" />
                        </MultiBinding>
                    </controls:ProgressRing.Visibility>
                </controls:ProgressRing>
            </StackPanel>
            <TextBlock
                Grid.Row="1"
                Margin="0,15,0,15"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="22"
                FontWeight="Light"
                Foreground="White"
                Text="{lex:LocText LoggedInLabel}"
                Visibility="{Binding IsLoggedIn, Converter={StaticResource BoolToInverseVisibilityConverter}}" />
            <Button
                Grid.Row="2"
                Width="100"
                Height="35"
                Margin="0,15,0,15"
                HorizontalAlignment="Center"
                controls:ControlsHelper.ContentCharacterCasing="Normal"
                Command="{Binding CloseCommand}"
                Content="{lex:LocText CloseLabel}"
                Style="{StaticResource AccentedSquareButtonStyle}" />
        </Grid>
    </Grid>
</dialogs:CustomDialog>
